x = rnorm(n), y = runif(n))
library(circlize)
circos.par("track.height" = 0.1)
circos.initialize(factors = df$factors, x = df$x)
install.packages('circlize')
library("circlize")
library(circlize)
source("https://bioconductor.org/biocLite.R")
biocLite("ComplexHeatmap")
A = 6
A
A <- 6
rm(list=ls())
library(systemPipeR)
library(systemPipeR)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("systemPipeR", version = "3.8")
updateR()
if(!require(installr)) {
install.packages("installr");
require(installr)
}
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("systemPipeR")
install.packages('installr')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("systemPipeR")
library(AnnotationHub)
ah <- AnnotationHub()
ah
ah[1]
unique(ah$dataprovider)
unique(ah$species)
ah1 <- subset(ah, spcecies == "Saccharomyces cerevisea")
ah1 <- subset(ah, species == "Saccharomyces cerevisea")
ah1
ah1 <- subset(ah, species == "Saccharomyces cerevisiae")
ah1
ah2 <- query(ah1, "RefSeq")
ah2
ah2$genome
ah2[[1]]
ah2[[1]]$names
ah2[[1]]$gene
gene <- ah2[[1]]
gene
table(table(gene$name))
promoters(gene)
ah1 <- subset(ah, species == "Homo sepiens")
ah1
ah <- AnnotationHub()
library(AnnotationHub)
ah <- AnnotationHub()
ah = subset(ah, species == "Homo sapiens")
query(ah, "CpG Islands")
ah1 <- query(ah, "CpG Islands")
ah1[["AH5086"]]
ah2 <- ah1[["AH5086"]]
summary(width(ah2))
ah = subset(ah, species == "Homo sapiens")
ah[[1]]
query(ah, "CpG Islands")
query(ah, "CpG Islands")[["AH5086"]]
query(ah, "CpG Islands")[["AH5463"]]
query(ah, "CpG Islands")[[AH5204]]
query(ah, "CpG Islands")[['AH5204']]
query(ah, "CpG Islands")[['AH5344']]
AH1 = query(ah, "CpG Islands")
display(AH1)
gr1 = AH1[[1]]
gr1
summary(seqnames(gr1))
seqnames(gr1)
table(gr1$name)
table(seqnames(gr1))
dt = table(seqnames(gr1))
head(dt)
dt[22,]
dt[22]
dt[1:22,]
dt[,1:22]
dim(dt)
names(dt)
dt
head(dt)
dt[:22]
dt[1:22]
sum(dt[1:22])
ah
ah2 = query(ah, c("H3K4me3 "))
ah1
ah
ah2
ah2 = query(ah, c("H3K4me3"))
ah2
ah2 = query(ah, c("H3K4me3", "H1"))
ah2
gr1
ah2[[2]]
ah3 <- ah2[[2]]
table(seqnames(ah3))
table(seqnames(ah3))[1:22]
ah4 <- table(seqnames(ah3))[1:22]
sum(ah4)
width(ah3)
sum(width(ah3))
summary(ah3)
summary(width(ah3))
table(width(ah3))
ah3
ah2
ah3[[4]]
ah3
ah[[2]]
ah2[[4]]
ah
ahs = query(ah, "RefSeq")
ahs
ahs$genome
ahs[[1]]
ah3
range(ah3)
reduce(ah3)
ah3
width(reduce(ah3))
sum(width(reduce(ah3)))
ah3
seqnames(ah3)
ah3[1:22]
seqnames(ah3[1:22])
AH3
mean(ah3$signalValue)
sum(width(reduce(ah3, ignore.strand = FALSE)))
sum(width(reduce(ah3, ignore.strand = TRUE)))
library(AnnotationHub)
ah <- AnnotationHub()
ah <- subset(ah, species == "Homo sapiens")
qhs <- query(ah, c("H3K4me3", "H1"))
qhs
qhs$dataprovider
qhs[[2]]
width(qhs[[2]])
width(reduce(qhs[[2]]))
sum(width(reduce(qhs[[2]])))
table(width(reduce(qhs[[2]])))
paste("chr", 1:22)
paste("chr", 1:22, sep = "")
chrs = paste("chr", 1:22, sep = "")
qhs <- qhs[seqnames(ahs) == chrs]
qhs <- qhs[seqnames(ahs) in chrs]
seqnames(ahs)
seqnames(qhs)
qhs
qhs <- query(ah, c("H3K4me3", "H1"))[[2]]
qhs
qhs <- qhs[seqnames(ahs)==chrs]
qhs
seqnames(qhs)
qhs <- qhs[seqnames(ahs) in chrs]
qhs <- qhs[seqnames(ahs)==chrs:]
qhs <- qhs[seqnames(ahs)[chrs:]]
qhs <- qhs[chrs:]
qhs <- seqnames()[1:22,]
qhs <- seqnames()[,1:22]
qhs <- seqnames(ahs)[,1:22]
qhs <- seqnames(ahs)[1:22,]
qhs$name
qhs <- qhs[1:22,]
qhs
qhs <- qhs[seqnames(qhs)==chrs,]
qhs <- query(ah, c("H3K4me3", "H1"))[[2]]
qhs <- qhs[seqnames(qhs)==chrs,]
qhs
seqnames(qhs)
qhs <- qhs[seqnames==chrs,]
qhs <- query(ah, c("H3K4me3", "H1"))[[2]]
chrs = paste("chr", 1:22, sep = "")
qhs = subset(qhs, seqnames(qhs) %in% chrs)
qhs
seqnames(qhs)
chrs
qhs = subset(qhs, seqnames(qhs) %in% autosome)
qhs = subset(qhs, seqnames %in% qhs)
qhs = subset(qhs, seqnames %in% chrs)
qhs
seqnames(qhs)
library(AnnotationHub)
sum(width(unlist(qhs)))
sum(width(qhs))
sum(width(reduce(qhs)))
sum(width(unlist(qhs)))
ah_H3K4me <- query(ah, c("H3K4me3", "E003"))
ah_H3K4me_data <- ah_H3K4me[["AH29884"]]
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
autosome <- c(paste("chr", 1:22, sep=""))
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
sum(width(unlist(ah_H3K4me_autosome_data)))
sum(width(ah_H3K4me_autosome_data))
ah_human_CpG <- query(ah, c("CpG Islands", "hg19")
)
ah_human_CpG_data <- ah_human_CpG[["AH5086"]]
ah_human_CpG_reduce <- reduce(ah_human_CpG_data)
split_data_by_chr <- split(ah_human_CpG_reduce, seqnames(ah_human_CpG_reduce))
autosome_CpG_data <- split_data_by_chr[autosome]
unlist(autosome_CpG_data)
autosome_CpG_data[4]
ah_H3K4me_data <- ah_H3K4me[["AH29884"]]
autosome <- c(paste("chr", 1:22, sep=""))
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
sum(width(ah_H3K4me_autosome_data))
mean(ah_H3K4me_autosome_data$signalValue)
ah_H3K4me <- query(ah, c("H3K27me3", "E003"))
ah_H3K4me
ah_H3K4me_data <- ah_H3K4me[["AH29892"]]
autosome <- c(paste("chr", 1:22, sep=""))
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
mean(ah_H3K4me_autosome_data$signalValue)
ah_H3K4me <- query(ah, c("H3K4me3", "E003"))
ah_H3K4me_data <- ah_H3K4me[["AH29884"]]
# subset autosome data
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
# count base pairs
sum(width(unlist(ah_H3K4me_autosome_data)))
# count base pairs
sum(width(unlist(ah_H3K4me_autosome_data)))
ah <- AnnotationHub()
ah <- subset(ah, species == "Homo sapiens")
ah_H3K4me <- query(ah, c("H3K4me3", "E003"))
ah_H3K4me_data <- ah_H3K4me[["AH29884"]]
# seqinfo(ah_H3K4me_data)
# seqlevels(ah_H3K4me_data)
# subset autosome data
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
# count base pairs
sum(width(unlist(ah_H3K4me_autosome_data)))
ah_H3K4me <- query(ah, c("H3K4me3", "E003"))
ah_H3K4me_data <- ah_H3K4me[["AH29884"]]
# seqinfo(ah_H3K4me_data)
# seqlevels(ah_H3K4me_data)
# subset autosome data
ah_H3K4me_autosome_data <- subset(ah_H3K4me_data, seqnames %in% autosome)
# count base pairs
sum(width(ah_H3K4me_autosome_data))
ah_H3K27me3 <- query(ah, c("H3K27me3", "narrowPeak", "E003"))
# retrieve data
ah_H3K27me3_data <- ah_H3K27me3[["AH29892"]]
ah_H3K27me3_autosome_data <- subset(ah_H3K27me3_data, seqnames %in% autosome)
# calculate mean signalValue
ah_H3K27me3_autosome_data_mean <- mean(ah_H3K27me3_autosome_data$signalValue)
ah_H3K27me3_autosome_data_mean
bivalent_data <- intersect(ah_H3K4me_autosome_data, ah_H3K27me3_autosome_data)
sum(width(reduce(bivalent_data)))
CpG_bivalent_data <- findOverlaps(bivalent_data, unlist(autosome_CpG_data))
fraction_bi <- length(unique(queryHits(CpG_bivalent_data)))/length(bivalent_data)
fraction_bi
ov_CpG_bivalent <- intersect(bivalent_data, unlist(autosome_CpG_data))
fraction_CpG <- sum(width(reduce(ov_CpG_bivalent)))/sum(width(unlist(autosome_CpG_data)))
fraction_CpG
CpG_10k <- resize(unlist(autosome_CpG_data),
width = 20000 + width(unlist(autosome_CpG_data)),
fix = "center")
CpG_10k_bivalent <- intersect(CpG_10k, bivalent_data)
sum(width(CpG_10k_bivalent))
library(Biostrings)
dna1 <- DNAString("ACGT-N")
dna1
dna2 <- DNAStringSet(c("ACGT", "GTCA", "GCTA"))
dna2
source("http://www.bioconductor.org/biocLite.R")
biocLite(c("BSgenome", "BSgenome.Hsapiens.UCSC.hg19")
)
dna1
DNAStringSet("ACG")
dna2 <- DNAStringSet(c("ACGT", "GTCA", "GCTA"))
dna2
names(dna2) <- paste0("seq", 1:3)
dna2
rev(dna1)
width(dna2)
library("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome)
biocLite(c("BSgenome", "BSgenome.Hsapiens.UCSC.hg19"))
biocLite(c("BSgenome", "BSgenome.Hsapiens.UCSC.hg19"))
library(BSgenome.Hsapiens.UCSC.hg19)
biocLite(c("BSgenome", "BSgenome.Hsapiens.UCSC.hg19"))
library(BSgenome.Hsapiens.UCSC.hg19)
library(BSgenome)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome", version = "3.8")
library(BSgenome)
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
library("BSgenome.Hsapiens.UCSC.hg19")
install.packages("RCurl")
library("BSgenome.Hsapiens.UCSC.hg19")
install.packages("RCurl")
install.packages("RCurl")
library("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome)
Hsapiens
totalBases <- letterFrequency(Hsapiens$chr22, "A") +
letterFrequency(Hsapiens$chr22, "C") +
letterFrequency(Hsapiens$chr22, "G") +
letterFrequency(Hsapiens$chr22, "T")
gcBase <- letterFrequency(Hsapiens$chr22, "GC")
gcContent <- gcBase/totalBases
gcContent
library(AnnotationHub)
ah <- AnnotationHub()
H3K27me3_qh <- query(ah, c("H3K27me3", "E003", "narrowPeak"))
H3K27me3_data <- H3K27me3_qh[["AH29892"]]
H3K27me3_data.chr22 <- subset(H3K27me3_data, seqnames == "chr22")
H3K27me3_data.chr22.seq <- Views(Hsapiens, H3K27me3_data.chr22)
gcContents <- letterFrequency(H3K27me3_data.chr22.seq, "GC", as.prob = T)
meanGcContents <- mean(gcContents)
meanGcContents
H3K27me3_data.chr22
H3K27me3_data.chr22.seq
meanGcContents
gcContents
H3K27me3_data.chr22
sigV <- mcols(H3K27me3_data.chr22.seq)$signalValue
sigV
cor(sigV, gcContents)
H3K27me3_fc <- query(ah, c("H3K27me3", "E003", "fc.signal"))
H3K27me3_fc.data <- H3K27me3_fc[["AH32033"]]
H3K27me3_fc.data
H3K27me3_fc.rel <- import(H3K27me3_fc.data, which = gr.chr22, as = "Rle")
gr.chr22 <- GRanges(seqnames = "chr22",
ranges = IRanges(start =1, end = 51304566))
gr.chr22
H3K27me3_fc.rel <- import(H3K27me3_fc.data, which = gr.chr22, as = "Rle")
H3K27me3_fc.data
H3K27me3_fc.rel
H3K27me3_fc.rel.chr22 <- H3K27me3_fc.rel$chr22
fc.signal.chr22 <- Views(H3K27me3_fc.rel.chr22,
start = start(H3K27me3_data.chr22),
end = end(H3K27me3_data.chr22))
fc.signal.mean <- mean(fc.signal.chr22)
cor(fc.signal.mean, sigV)
fc.signal.mean
cor(fc.signal.mean, sigV)
sum(fc.signal.chr22 > 1)
sum(H3K27me3_fc.rel.chr22 > 1)
H3K27me3_fc_E055 <- query(ah, c("H3K27me3", "E055"))
H3K27me3_fc_E055_data <- H3K27me3_fc_E055[[4]]
gr.chr22 <- GRanges(seqnames = "chr22",
ranges = IRanges(start =1, end = 51304566))
H3K27me3_fc.rel_E055 <- import(H3K27me3_fc_E055_data, which =gr.chr22, as = "Rle")
H3K27me3_fc.rel_E055.chr22 <- H3K27me3_fc.rel_E055$chr22
H3K27me3_fc.rel_E055
H3K27me3_fc.rel_E055.chr22
region_E003 <- slice(H3K27me3_fc.rel.chr22, upper = 0.5)
region_E055 <- slice(H3K27me3_fc.rel_E055.chr22, lower = 2)
region_E003 <- as(region_E003, "IRanges")
region_E055 <- as(region_E055, "IRanges")
inter_region <- intersect(region_E003, region_E055)
inter_region
sum(width(inter_region))
CpGIsland <- query(ah, c("hg19", "CpG Islands"))
CpGIsland_data <- CpGIsland[["AH5086"]]
CpGIsland_data.chr22 <- subset(CpGIsland_data, seqnames == "chr22")
CpGIsland_data.chr22.vi <- Views(Hsapiens, CpGIsland_data.chr22)
region_length <- width(CpGIsland_data.chr22.vi)
observed_gcBase <- dinucleotideFrequency(CpGIsland_data.chr22.vi)[,7]/region_length
freq_C <- letterFrequency(CpGIsland_data.chr22.vi, "C")
freq_G <- letterFrequency(CpGIsland_data.chr22.vi, "G")
expected_gcBase <- (freq_C/region_length)*(freq_G/region_length)
mean(observed_gcBase/expected_gcBase)
TATA_boxes <- countPattern("TATAAA", Hsapiens$chr22) +
countPattern("TATAAA", reverseComplement(Hsapiens$chr22))
TATA_boxes
rm((list=ls()))
rm(list = ls())
df <- read.csv("~/Desktop/log2FC_all_dt.tsv")
head(df)
df <- read.csv("~/Desktop/log2FC_all_dt.tsv", sep = "\t")
head(df)
colnames(df)
df$baseMean
head(df)
head(c(1,35))
df[c(1,35)]
df[c(1,30)]
df[c(1:6)]
df[c(1:26)]
df[c(24:26)]
df1 <- df[c(24:26)]
head(df1)
df1[,1]
df1[1,]
grep(grep("YKL104C", rownames())
)
grep(grep("YKL104C", rownames(df1)))
grep("YKL104C", rownames(df1))
df1[5390,]
head(df)
df1[5390,]
df <- read.csv("~/Desktop/log2FC_all_ribo.tsv", sep = "\t")
df <- read.csv("~/Desktop/log2FC_all_ribo.tsv", sep = "\t")
df <- read.csv("~/Desktop/log2FC_all_rb.tsv", sep = "\t")
head(df)
df1 <- df[c(24:26)]
grep("YKL104C", rownames(df1))
df1[5390,]
df <- read.csv("~/Downloads/solmon_count_matrix_pervasive.csv", sep = "\t")
head(df)
df <- read.csv("~/Downloads/solmon_count_matrix_pervasive.csv")
head(df)
df1 <- df[grep("snR", df$Name),]
df1
df1 <- df[,grep("snR", df$Name)]
df1
df1 <- df[grep("SNR", df$Name)]
df1 <- df[grep("SNR", df$Name),]
df1
df1 <- df[grep("CUT", df$Name),]
df1
dim(df1)
colSums(df1)
colSums(df1[3:])
df1[3:10]
sum(df1$BM_csl4ph_pBM5_1)
sum(df1$BM_csl4ph_pBM5_2)
sum(df1$BM_enp1_1_pBM5_1)
sum(df1$BM_WT_pBM5_1)
sum(df1$BM_csl4ph_pBM766_1)
sum(df$BM_enp1_1_pBM766_1)
sum(df1$BM_enp1_1_pBM766_1)
sum(df1$BM_WT_pBM766_1)
library("biomarRt")
library("biomart")
library("biomaRt")
listMarts()
useMart("ensebl")
useMart("ensembl")
ensembl <- useMart("ensembl")
datasets <- listDatasets(ensembl)
head(datasets)
library("biomaRt")
ensembl <- useDataset("hsapiens_gene_ensembl", mart = ensembl)
filters = listFilters(ensembl)
head(filters)
listFilters(filter())
filter()
datasets
searchDatasets(mart = ensembl, pattern = "cerevicae")
searchDatasets(mart = ensembl, pattern = "cerevisiae")
ensembl <- useDataset("scerevisiae_gene_ensembl", mart = ensembl)
listFilters(ensembl)
filters = listFilters(ensembl)
filters
listAttributes(ensembl)
searchDatasets(mart = ensembl, pattern = "symbol")
searchAttributes(mart = ensembl, pattern = "symbol")
ensembl <- useDataset("scerevisiae_gene_ensembl", mart = ensembl)
searchAttributes(mart = ensembl, pattern = "symbol")
listAttributes(ensembl)
searchAttributes(mart = ensembl, pattern = "_id")
searchAttributes(mart = ensembl, pattern = "^id")
searchAttributes(mart = ensembl, pattern = "*id")
searchAttributes(mart = ensembl, pattern = "gene_id")
searchAttributes(mart = ensembl, pattern = "ensembl")
genelist <- c("ACT1", "MEX67", "GLE1", "DBP5", "SMC1", "SMC3", "NUP159", "ENP1", "CSL4")
searchAttributes(mart = ensembl, pattern = "name_gene")
searchAttributes(mart = ensembl, pattern = "name")
searchAttributes(mart = ensembl, pattern = "name")
searchAttributes(mart = ensembl, pattern = "gene_name")
searchFilters(mart = ensembl, pattern = "gene_name")
martdata <- getBM(attributes = c("chromosome_name", "ensembl_gene_id", "external_gene_name", "go_id"),
filters = "external_gene_name",
values = genelist,
mart = ensembl)
martdata
searchAttributes(mart = ensembl, pattern = "go")
searchAttributes(mart = ensembl, pattern = "term")
martdata <- getBM(attributes = c("chromosome_name", "ensembl_gene_id",
"external_gene_name", "go_id", "definition_1006"),
filters = "external_gene_name",
values = genelist,
mart = ensembl)
martdata
searchAttributes(mart = ensembl, pattern = "term")
martdata <- getBM(attributes = c("chromosome_name", "ensembl_gene_id",
"external_gene_name", "go_id", "name_1006"),
filters = "external_gene_name",
values = genelist,
mart = ensembl)
martdata
seq <- getSequence(id=genelist, type = "external_gene_name", mart = ensembl)
searchAttributes(mart = ensembl, pattern = "transcript")
searchAttributes(mart = ensembl, pattern = "transcript_exon")
seq <- getSequence(id=genelist, type = "external_gene_name", seqType = "transcript_exon_intron", mart = ensembl)
seq
setwd("~/Paul_et_al_2019/RNA_Seq/")
wt_vs_mutants_d <- fread("./results/output_feature_count.csv", header = T, sep = ",")
wt_vs_mutants_d <- fread("results/output_feature_count.csv", header = T, sep = ",")
wt_vs_mutants_d <- fread("~/results/output_feature_count.csv", header = T, sep = ",")
wt_vs_mutants_d <- fread("./results/output_feature_count.csv", header = T, sep = ",")
library('DESeq2')
library('data.table')
library('stats')
library('ggplot2')
library('tidyverse')
wt_vs_mutants_d <- fread("./results/output_feature_count.csv", header = T, sep = ",")
head(wt_vs_mutants_d)
dim(wt_vs_mutants_d)
